<?xml version="1.0" encoding="GBK"?>
<!-- 此处必须使用GBK，如果使用UTF-8会报错 -->
<ehcache>

    <!--
		指定一个目录：当 EHCache 需要把数据写到硬盘上时, 将把数据写到这个目录下.
		Java.io.tmpdir目录在运行时会根据相对路径生成。
	--> 
    <diskStore path="G:\\milepostEhcache"/><!-- G:\\cache，Java.io.tmpdir -->
    
    <!--设置缓存的默认数据过期策略 --> 
    <defaultCache
        maxElementsInMemory="10000"
        eternal="false"
        timeToIdleSeconds="120"
        timeToLiveSeconds="120"
        overflowToDisk="true"
        maxElementsOnDisk="10000000"
        diskPersistent="false"
        diskExpiryThreadIntervalSeconds="120"
        memoryStoreEvictionPolicy="LRU"
        />

	<!--  
   		设定具体的命名缓存的数据过期策略。每个命名缓存代表一个缓存区域
   		缓存区域(region)：一个具有名称的缓存块，可以给每一个缓存块设置不同的缓存策略。
   		如果没有设置任何的缓存区域，则所有被缓存的对象，都将使用默认的缓存策略。即：<defaultCache.../>
   		Hibernate 在不同的缓存区域保存不同的类/集合。
			对于类而言，区域的名称是类名。如:com.atguigu.domain.Customer
			对于集合而言，区域的名称是类名加属性名。如com.atguigu.domain.Customer.orders
   	-->
   	<!--  
   		name: 设置缓存的名字,它的取值为类的全限定名或类的集合的名字 
		maxElementsInMemory: 设置基于内存的缓存中可存放的对象最大数目 
		
		eternal: 设置对象是否为永久的, true表示永不过期,
		此时将忽略timeToIdleSeconds 和 timeToLiveSeconds属性; 默认值是false 
		timeToIdleSeconds:设置对象空闲最长时间,以秒为单位, 超过这个时间,对象过期。
		当对象过期时,EHCache会把它从缓存中清除。如果此值为0,表示对象可以无限期地处于空闲状态。 
		timeToLiveSeconds:设置对象生存最长时间,超过这个时间,对象过期。
		如果此值为0,表示对象可以无限期地存在于缓存中. 该属性值必须大于或等于 timeToIdleSeconds 属性值 
		
		overflowToDisk:设置基于内存的缓存中的对象数目达到上限后,是否把溢出的对象写到基于硬盘的缓存中 
   		maxElementsOnDisk:磁盘的最大元素量。
   		diskPersistent:磁盘的永久化。
   	-->
   	
   	<cache name="myCache"
	    maxElementsInMemory="10000"
	    eternal="false"
	    timeToIdleSeconds="120"
	    timeToLiveSeconds="120"
	    overflowToDisk="true"
	    maxElementsOnDisk="10000000"
	    />
	<!-- 很少使用了
		diskPersistent="false"
	    diskExpiryThreadIntervalSeconds="120"
	    memoryStoreEvictionPolicy="LRU"
	 -->
</ehcache>
